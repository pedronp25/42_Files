CC = cc
AR = ar rcs
RM = rm -f
NAME = libft.a
CFLAGS = -Wall -Wextra -Werror

OBJDIR = libft_objs

SRCS = ft_atoi.c \
       ft_bzero.c \
       ft_calloc.c \
       ft_isalnum.c \
       ft_isalpha.c \
       ft_isascii.c \
       ft_isdigit.c \
       ft_isprint.c \
       ft_itoa.c \
       ft_memchr.c \
       ft_memcmp.c \
       ft_memcpy.c \
       ft_memmove.c \
       ft_memset.c \
       ft_putchar_fd.c \
       ft_putendl_fd.c \
       ft_putnbr_fd.c \
       ft_putstr_fd.c \
       ft_split.c \
       ft_strchr.c \
       ft_strdup.c \
       ft_striteri.c \
       ft_strjoin.c \
       ft_strlcat.c \
       ft_strlcpy.c \
       ft_strlen.c \
       ft_strmapi.c \
       ft_strncmp.c \
       ft_strnstr.c \
       ft_strrchr.c \
       ft_strtrim.c \
       ft_substr.c \
       ft_tolower.c \
       ft_toupper.c \
       ft_lstadd_back_bonus.c \
       ft_lstadd_front_bonus.c \
       ft_lstclear_bonus.c \
       ft_lstdelone_bonus.c \
       ft_lstiter_bonus.c \
       ft_lstlast_bonus.c \
       ft_lstmap_bonus.c \
       ft_lstnew_bonus.c \
       ft_lstsize_bonus.c \
       printf_utils/ft_printf.c \
       printf_utils/ft_printf_utils.c \
       printf_utils/ft_uitoa.c \
       printf_utils/ft_printf_utils_hex.c \
       printf_utils/ft_hextoa.c \
	   gnl_utils/get_next_line.c \
	   gnl_utils/get_next_line_utils.c

OBJS = $(SRCS:%.c=$(OBJDIR)/%.o)

all: $(NAME)

$(NAME): $(OBJS)
	$(AR) $(NAME) $(OBJS)

$(OBJDIR)/%.o: %.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	$(RM) $(OBJS)

fclean: clean
	$(RM) $(NAME)

re: fclean all
